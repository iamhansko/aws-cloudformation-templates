AWSTemplateFormatVersion: "2010-09-09"
Description: "CloudFormation Template"

# Parameters:
#   KeyPair: 
#     Description: EC2 Key Pair
#     Type: AWS::EC2::KeyPair::KeyName

Mappings:
  RegionMap:
    us-east-1:
      AmazonLinux2023: ami-0005e0cfe09cc9050
    ap-northeast-2:
      AmazonLinux2023: ami-0bfd23bc25c60d5a1

Resources:
  KeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: !Sub "key-${AWS::StackId}"
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: True
      EnableDnsSupport: True
      # InstanceTenancy: String
      # Ipv4IpamPoolId: String
      # Ipv4NetmaskLength: Integer
      Tags: 
        - Key : Name
          Value : vpc-skills-ap
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      # AssignIpv6AddressOnCreation: Boolean
      AvailabilityZone: !Sub "${AWS::Region}a"
      # AvailabilityZoneId: String
      CidrBlock: 10.0.0.0/24
      # EnableDns64: Boolean
      # Ipv4IpamPoolId: String
      # Ipv4NetmaskLength: Integer
      # Ipv6CidrBlock: String
      # Ipv6CidrBlocks: 
      #  - String
      # Ipv6IpamPoolId: String
      # Ipv6Native: Boolean
      # Ipv6NetmaskLength: Integer
      # MapPublicIpOnLaunch: Boolean
      # OutpostArn: String
      # PrivateDnsNameOptionsOnLaunch: 
      # PrivateDnsNameOptionsOnLaunch
      Tags: 
        - Key : Name
          Value : skills-pub-a
      VpcId: !Ref Vpc
  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      # AssignIpv6AddressOnCreation: Boolean
      AvailabilityZone: !Sub "${AWS::Region}b"
      # AvailabilityZoneId: String
      CidrBlock: 10.0.2.0/24
      # EnableDns64: Boolean
      # Ipv4IpamPoolId: String
      # Ipv4NetmaskLength: Integer
      # Ipv6CidrBlock: String
      # Ipv6CidrBlocks: 
      #  - String
      # Ipv6IpamPoolId: String
      # Ipv6Native: Boolean
      # Ipv6NetmaskLength: Integer
      # MapPublicIpOnLaunch: Boolean
      # OutpostArn: String
      # PrivateDnsNameOptionsOnLaunch: 
      # PrivateDnsNameOptionsOnLaunch
      Tags: 
        - Key : Name
          Value : skills-pub-b
      VpcId: !Ref Vpc
  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      # AssignIpv6AddressOnCreation: Boolean
      AvailabilityZone: !Sub "${AWS::Region}a"
      # AvailabilityZoneId: String
      CidrBlock: 10.0.1.0/24
      # EnableDns64: Boolean
      # Ipv4IpamPoolId: String
      # Ipv4NetmaskLength: Integer
      # Ipv6CidrBlock: String
      # Ipv6CidrBlocks: 
      #  - String
      # Ipv6IpamPoolId: String
      # Ipv6Native: Boolean
      # Ipv6NetmaskLength: Integer
      # MapPublicIpOnLaunch: Boolean
      # OutpostArn: String
      # PrivateDnsNameOptionsOnLaunch: 
      # PrivateDnsNameOptionsOnLaunch
      Tags: 
        - Key : Name
          Value : skills-priv-a
      VpcId: !Ref Vpc
  PrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      # AssignIpv6AddressOnCreation: Boolean
      AvailabilityZone: !Sub "${AWS::Region}b"
      # AvailabilityZoneId: String
      CidrBlock: 10.0.3.0/24
      # EnableDns64: Boolean
      # Ipv4IpamPoolId: String
      # Ipv4NetmaskLength: Integer
      # Ipv6CidrBlock: String
      # Ipv6CidrBlocks: 
      #  - String
      # Ipv6IpamPoolId: String
      # Ipv6Native: Boolean
      # Ipv6NetmaskLength: Integer
      # MapPublicIpOnLaunch: Boolean
      # OutpostArn: String
      # PrivateDnsNameOptionsOnLaunch: 
      # PrivateDnsNameOptionsOnLaunch
      Tags: 
        - Key : Name
          Value : skills-priv-b
      VpcId: !Ref Vpc
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: skills-igw
  VpcInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref Vpc
      # VpnGatewayId: String
  NatGatewayElasticIp:
    Type: AWS::EC2::EIP
    # Properties:
      # Domain: String
      # InstanceId: String
      # NetworkBorderGroup: String
      # PublicIpv4Pool: String
      # Tags: 
      #   - Tag
      # TransferAddress: String
  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayElasticIp.AllocationId
      # ConnectivityType: String
      # MaxDrainDurationSeconds: Integer
      # PrivateIpAddress: String
      # SecondaryAllocationIds: 
      #   - String
      # SecondaryPrivateIpAddressCount: Integer
      # SecondaryPrivateIpAddresses: 
      #   - String
      SubnetId: !Ref PublicSubnetA
      Tags: 
        - Key : Name
          Value : skills-natgw
  PublicSubnetARouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags: 
        - Key : Name
          Value : skills-pub-a-rt
      VpcId: !Ref Vpc
  PublicSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicSubnetARouteTable
      SubnetId: !Ref PublicSubnetA
  PublicSubnetARoute:
    Type: AWS::EC2::Route
    Properties:
      # CarrierGatewayId: String
      # CoreNetworkArn: String
      DestinationCidrBlock: 0.0.0.0/0
      # DestinationIpv6CidrBlock: String
      # DestinationPrefixListId: String
      # EgressOnlyInternetGatewayId: String
      GatewayId: !Ref InternetGateway
      # InstanceId: String
      # LocalGatewayId: String
      # NatGatewayId: String
      # NetworkInterfaceId: String
      RouteTableId: !Ref PublicSubnetARouteTable
      # TransitGatewayId: String
      # VpcEndpointId: String
      # VpcPeeringConnectionId: String
  PublicSubnetBRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags: 
        - Key : Name
          Value : skills-pub-b-rt
      VpcId: !Ref Vpc
  PublicSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicSubnetBRouteTable
      SubnetId: !Ref PublicSubnetB
  PublicSubnetBRoute:
    Type: AWS::EC2::Route
    Properties:
      # CarrierGatewayId: String
      # CoreNetworkArn: String
      DestinationCidrBlock: 0.0.0.0/0
      # DestinationIpv6CidrBlock: String
      # DestinationPrefixListId: String
      # EgressOnlyInternetGatewayId: String
      GatewayId: !Ref InternetGateway
      # InstanceId: String
      # LocalGatewayId: String
      # NatGatewayId: String
      # NetworkInterfaceId: String
      RouteTableId: !Ref PublicSubnetBRouteTable
      # TransitGatewayId: String
      # VpcEndpointId: String
      # VpcPeeringConnectionId: String
  PrivateSubnetARouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags: 
        - Key : Name
          Value : skills-priv-a-rt
      VpcId: !Ref Vpc
  PrivateSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateSubnetARouteTable
      SubnetId: !Ref PrivateSubnetA
  PrivateSubnetARoute:
    Type: AWS::EC2::Route
    Properties:
      # CarrierGatewayId: String
      # CoreNetworkArn: String
      DestinationCidrBlock: 0.0.0.0/0
      # DestinationIpv6CidrBlock: String
      # DestinationPrefixListId: String
      # EgressOnlyInternetGatewayId: String
      # GatewayId: String
      # InstanceId: String
      # LocalGatewayId: String
      NatGatewayId: !Ref NatGateway
      # NetworkInterfaceId: String
      RouteTableId: !Ref PrivateSubnetARouteTable
      # TransitGatewayId: String
      # VpcEndpointId: String
      # VpcPeeringConnectionId: String
  PrivateSubnetBRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags: 
        - Key : Name
          Value : skills-priv-b-rt
      VpcId: !Ref Vpc
  PrivateSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateSubnetBRouteTable
      SubnetId: !Ref PrivateSubnetB
  PrivateSubnetBRoute:
    Type: AWS::EC2::Route
    Properties:
      # CarrierGatewayId: String
      # CoreNetworkArn: String
      DestinationCidrBlock: 0.0.0.0/0
      # DestinationIpv6CidrBlock: String
      # DestinationPrefixListId: String
      # EgressOnlyInternetGatewayId: String
      # GatewayId: String
      # InstanceId: String
      # LocalGatewayId: String
      NatGatewayId: !Ref NatGateway
      # NetworkInterfaceId: String
      RouteTableId: !Ref PrivateSubnetBRouteTable
      # TransitGatewayId: String
      # VpcEndpointId: String
      # VpcPeeringConnectionId: String
  BastionEc2:
    Type: AWS::EC2::Instance
    Properties:
      # AdditionalInfo: String
      # Affinity: String
      # AvailabilityZone: String
      # BlockDeviceMappings: 
      #   - BlockDeviceMapping
      # CpuOptions: 
      #   CpuOptions
      # CreditSpecification: 
      #   CreditSpecification
      # DisableApiTermination: Boolean
      # EbsOptimized: Boolean
      # ElasticGpuSpecifications: 
      #   - ElasticGpuSpecification
      # ElasticInferenceAccelerators: 
      #   - ElasticInferenceAccelerator
      # EnclaveOptions: 
      #   EnclaveOptions
      # HibernationOptions: 
      #   HibernationOptions
      # HostId: String
      # HostResourceGroupArn: String
      # IamInstanceProfile: String
      ImageId: !FindInMap [RegionMap, !Ref AWS::Region, AmazonLinux2023]
      # InstanceInitiatedShutdownBehavior: String
      InstanceType: t2.small
      # Ipv6AddressCount: Integer
      # Ipv6Addresses: 
      #   - InstanceIpv6Address
      # KernelId: String
      KeyName: !Ref KeyPair
      # LaunchTemplate: 
      #   LaunchTemplateSpecification
      # LicenseSpecifications: 
      #   - LicenseSpecification
      # Monitoring: Boolean
      NetworkInterfaces: 
        - AssociatePublicIpAddress: True
          DeviceIndex: 0
          SubnetId: !Ref PublicSubnetA
          GroupSet: 
            - !Ref BastionEc2SecurityGroup
      # PlacementGroupName: String
      # PrivateDnsNameOptions: 
      #   PrivateDnsNameOptions
      # PrivateIpAddress: String
      # PropagateTagsToVolumeOnCreation: Boolean
      # RamdiskId: String
      # SecurityGroupIds: 
      #  - String
      # SecurityGroups: 
      #   - String
      # SourceDestCheck: Boolean
      # SsmAssociations: 
      #   - SsmAssociation
      # SubnetId: String
      Tags: 
        - Key: Name
          Value: bastion-skills-ap
      # Tenancy: String
      # UserData: String
      # Volumes: 
      #   - Volume
  BastionEc2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Security Group for Bastion EC2 SSH Connection"
      GroupName: bastion-sg
      # SecurityGroupEgress: 
      #   - Egress
      SecurityGroupIngress: 
        - CidrIp: 0.0.0.0/0
          # CidrIpv6: String
          # Description: String
          FromPort: 22
          IpProtocol: tcp
          # SourcePrefixListId: String
          # SourceSecurityGroupId: String
          # SourceSecurityGroupName: String
          # SourceSecurityGroupOwnerId: String
          ToPort: 22
      # Tags: 
      #   - Tag
      VpcId: !Ref Vpc
  IamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      # Description: String
      # ManagedPolicyArns: 
      #   - String
      # MaxSessionDuration: Integer
      # Path: String
      # PermissionsBoundary: String
      Policies:
        - PolicyName: GetS3Policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:Get*
                  - s3:List*
                  - s3:Describe*
                  - s3-object-lambda:Get*
                  - s3-object-lambda:List*
                Resource: '*'
      RoleName: Ec2GetS3Role
      # Tags: 
      #   - Tag
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: Ec2GetS3Profile
      # Path: String
      Roles: 
        - !Ref IamRole
  StableLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData: 
        # BlockDeviceMappings: 
        #   - BlockDeviceMapping
        # CapacityReservationSpecification: 
        #   CapacityReservationSpecification
        # CpuOptions: 
        #   CpuOptions
        # CreditSpecification: 
        #   CreditSpecification
        # DisableApiStop: Boolean
        # DisableApiTermination: Boolean
        # EbsOptimized: Boolean
        # ElasticGpuSpecifications: 
        #   - ElasticGpuSpecification
        # ElasticInferenceAccelerators: 
        #   - LaunchTemplateElasticInferenceAccelerator
        # EnclaveOptions: 
        #   EnclaveOptions
        # HibernationOptions: 
        #   HibernationOptions
        IamInstanceProfile:
          Arn: !GetAtt InstanceProfile.Arn
        ImageId: !FindInMap [RegionMap, !Ref AWS::Region, AmazonLinux2023]
        # InstanceInitiatedShutdownBehavior: String
        # InstanceMarketOptions: 
        #   InstanceMarketOptions
        # InstanceRequirements: 
        #   InstanceRequirements
        InstanceType: t3.small
        # KernelId: String
        KeyName: !Ref KeyPair
        # LicenseSpecifications: 
        #   - LicenseSpecification
        # MaintenanceOptions: 
        #   MaintenanceOptions
        # MetadataOptions: 
        #   MetadataOptions
        # Monitoring: 
        #   Monitoring
        NetworkInterfaces: 
          - DeviceIndex: 0
            Groups: 
              - !Ref AutoScalingGroupSecurityGroup
        # Placement: 
        #   Placement
        # PrivateDnsNameOptions: 
        #   PrivateDnsNameOptions
        # RamDiskId: String
        # SecurityGroupIds: 
        #   - String
        # SecurityGroups: 
        #   - String
        TagSpecifications: 
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: web-skills-ap-stable
        UserData: !Base64 |
          #!/bin/bash -xe
          exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
          dnf update -y
          dnf install httpd -y
          service httpd start
          chkconfig httpd on
          cd /var/www/html
          aws s3 cp s3://skills-seoul19990731/v1.tar .
          cd /var/www/html
          tar -xvf v1.tar
          rm v1.tar
          mv v1/* ./
      LaunchTemplateName: web-skills-ap-stable-template
  StableAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: web-skills-ap-stable
      AvailabilityZones: 
        - !Sub "${AWS::Region}a"
        - !Sub "${AWS::Region}b"
      # CapacityRebalance: Boolean
      # Context: String
      # Cooldown: String
      # DefaultInstanceWarmup: Integer
      # DesiredCapacity: String
      # DesiredCapacityType: String
      # HealthCheckGracePeriod: Integer
      # HealthCheckType: String
      # InstanceId: String
      # InstanceMaintenancePolicy: 
      #   InstanceMaintenancePolicy
      # LaunchConfigurationName: String
      LaunchTemplate: 
        LaunchTemplateId: !Ref StableLaunchTemplate
        Version: !GetAtt StableLaunchTemplate.LatestVersionNumber
      # LifecycleHookSpecificationList: 
      #   - LifecycleHookSpecification
      # LoadBalancerNames: 
      #   - String
      # MaxInstanceLifetime: Integer
      MaxSize: 4
      # MetricsCollection: 
      #   - MetricsCollection
      MinSize: 2
      # MixedInstancesPolicy: 
      #   MixedInstancesPolicy
      # NewInstancesProtectedFromScaleIn: Boolean
      # NotificationConfigurations: 
      #   - NotificationConfiguration
      # PlacementGroup: String
      # ServiceLinkedRoleARN: String
      # Tags: 
      #   - TagProperty
      TargetGroupARNs: 
        - !Ref StableTargetGroup
      # TerminationPolicies: 
      #   - String
      VPCZoneIdentifier: 
        - !Ref PrivateSubnetA
        - !Ref PrivateSubnetB
  StableAutoScalingPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: PercentChangeInCapacity
      AutoScalingGroupName: !Ref StableAutoScalingGroup
      # Cooldown: String
      # EstimatedInstanceWarmup: Integer
      # MetricAggregationType: Average
      # MinAdjustmentMagnitude: Integer
      PolicyType: TargetTrackingScaling
      # PredictiveScalingConfiguration: 
      #   PredictiveScalingConfiguration
      # ScalingAdjustment: Integer
      # StepAdjustments: 
      #   - StepAdjustment
      TargetTrackingConfiguration: 
        # CustomizedMetricSpecification: 
        #   CustomizedMetricSpecification
        # DisableScaleIn: Boolean
        PredefinedMetricSpecification: 
          PredefinedMetricType: ASGAverageCPUUtilization
          # ResourceLabel: String
        TargetValue: 10
  TestLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData: 
        # BlockDeviceMappings: 
        #   - BlockDeviceMapping
        # CapacityReservationSpecification: 
        #   CapacityReservationSpecification
        # CpuOptions: 
        #   CpuOptions
        # CreditSpecification: 
        #   CreditSpecification
        # DisableApiStop: Boolean
        # DisableApiTermination: Boolean
        # EbsOptimized: Boolean
        # ElasticGpuSpecifications: 
        #   - ElasticGpuSpecification
        # ElasticInferenceAccelerators: 
        #   - LaunchTemplateElasticInferenceAccelerator
        # EnclaveOptions: 
        #   EnclaveOptions
        # HibernationOptions: 
        #   HibernationOptions
        IamInstanceProfile:
          Arn: !GetAtt InstanceProfile.Arn
        ImageId: !FindInMap [RegionMap, !Ref AWS::Region, AmazonLinux2023]
        # InstanceInitiatedShutdownBehavior: String
        # InstanceMarketOptions: 
        #   InstanceMarketOptions
        # InstanceRequirements: 
        #   InstanceRequirements
        InstanceType: t3.small
        # KernelId: String
        KeyName: !Ref KeyPair
        # LicenseSpecifications: 
        #   - LicenseSpecification
        # MaintenanceOptions: 
        #   MaintenanceOptions
        # MetadataOptions: 
        #   MetadataOptions
        # Monitoring: 
        #   Monitoring
        NetworkInterfaces: 
          - DeviceIndex: 0
            Groups: 
              - !Ref AutoScalingGroupSecurityGroup
        # Placement: 
        #   Placement
        # PrivateDnsNameOptions: 
        #   PrivateDnsNameOptions
        # RamDiskId: String
        # SecurityGroupIds: 
        #   - String
        # SecurityGroups: 
        #   - String
        TagSpecifications: 
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: web-skills-ap-test
        UserData: !Base64 |
          #!/bin/bash -xe
          exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
          dnf update -y
          dnf install httpd -y
          service httpd start
          chkconfig httpd on
          cd /var/www/html
          aws s3 cp s3://skills-seoul19990731/v2.tar .
          cd /var/www/html
          tar -xvf v2.tar
          rm v2.tar
          mv v2/* ./
      LaunchTemplateName: web-skills-ap-test-template
  TestAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: web-skills-ap-test
      AvailabilityZones: 
        - !Sub "${AWS::Region}a"
        - !Sub "${AWS::Region}b"
      # CapacityRebalance: Boolean
      # Context: String
      # Cooldown: String
      # DefaultInstanceWarmup: Integer
      # DesiredCapacity: String
      # DesiredCapacityType: String
      # HealthCheckGracePeriod: Integer
      # HealthCheckType: String
      # InstanceId: String
      # InstanceMaintenancePolicy: 
      #   InstanceMaintenancePolicy
      # LaunchConfigurationName: String
      LaunchTemplate: 
        LaunchTemplateId: !Ref TestLaunchTemplate
        Version: !GetAtt TestLaunchTemplate.LatestVersionNumber
      # LifecycleHookSpecificationList: 
      #   - LifecycleHookSpecification
      # LoadBalancerNames: 
      #   - String
      # MaxInstanceLifetime: Integer
      MaxSize: 4
      # MetricsCollection: 
      #   - MetricsCollection
      MinSize: 2
      # MixedInstancesPolicy: 
      #   MixedInstancesPolicy
      # NewInstancesProtectedFromScaleIn: Boolean
      # NotificationConfigurations: 
      #   - NotificationConfiguration
      # PlacementGroup: String
      # ServiceLinkedRoleARN: String
      # Tags: 
      #   - TagProperty
      TargetGroupARNs: 
        - !Ref TestTargetGroup
      # TerminationPolicies: 
      #   - String
      VPCZoneIdentifier: 
        - !Ref PrivateSubnetA
        - !Ref PrivateSubnetB
  TestAutoScalingPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: PercentChangeInCapacity
      AutoScalingGroupName: !Ref TestAutoScalingGroup
      # Cooldown: String
      # EstimatedInstanceWarmup: Integer
      # MetricAggregationType: Average
      # MinAdjustmentMagnitude: Integer
      PolicyType: TargetTrackingScaling
      # PredictiveScalingConfiguration: 
      #   PredictiveScalingConfiguration
      # ScalingAdjustment: Integer
      # StepAdjustments: 
      #   - StepAdjustment
      TargetTrackingConfiguration: 
        # CustomizedMetricSpecification: 
        #   CustomizedMetricSpecification
        # DisableScaleIn: Boolean
        PredefinedMetricSpecification: 
          PredefinedMetricType: ASGAverageCPUUtilization
          # ResourceLabel: String
        TargetValue: 10
  AutoScalingGroupSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Security Group for AutoScalingGroup EC2"
      GroupName: asg-sg
      # SecurityGroupEgress: 
      #   - Egress
      SecurityGroupIngress: 
        - FromPort: 22
          IpProtocol: tcp
          SourceSecurityGroupId: !Ref BastionEc2SecurityGroup
          ToPort: 22
        - FromPort: 80
          IpProtocol: tcp
          SourceSecurityGroupId: !Ref BastionEc2SecurityGroup
          ToPort: 80
        - FromPort: 80
          IpProtocol: tcp
          SourceSecurityGroupId: !Ref ApplicationLoadBalancerSecurityGroup
          ToPort: 80
      # Tags: 
      #   - Tag
      VpcId: !Ref Vpc
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      # LoadBalancerAttributes: 
      #   - LoadBalancerAttribute
      Name: web-cc2021-ap-int
      Scheme: internal
      SecurityGroups: 
        - !Ref ApplicationLoadBalancerSecurityGroup
      # SubnetMappings: 
      #   - SubnetMapping
      Subnets: 
        - !Ref PrivateSubnetA
        - !Ref PrivateSubnetB
      # Tags: 
      #   - Tag
      Type: application
  ApplicationLoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Security Group for Application Load Balancer"
      GroupName: alb-sg
      # SecurityGroupEgress: 
      #   - Egress
      SecurityGroupIngress: 
        - CidrIp: 0.0.0.0/0
          # CidrIpv6: String
          # Description: String
          FromPort: 80
          IpProtocol: tcp
          # SourcePrefixListId: String
          # SourceSecurityGroupId: String
          # SourceSecurityGroupName: String
          # SourceSecurityGroupOwnerId: String
          ToPort: 80
      # Tags: 
      #   - Tag
      VpcId: !Ref Vpc
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      # AlpnPolicy: 
      #   - String
      # Certificates: 
      #   - Certificate
      DefaultActions: 
        - TargetGroupArn: !Ref StableTargetGroup
          Type: forward
          # ForwardConfig: 
          #   ForwardConfig
          # Order: Integer
          # RedirectConfig: 
          #   RedirectConfig
      LoadBalancerArn: !GetAtt ApplicationLoadBalancer.LoadBalancerArn
      # MutualAuthentication: 
      #   MutualAuthentication
      Port: 80
      Protocol: HTTP
      # SslPolicy: String
  BlockAdminPageListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions: 
        - FixedResponseConfig: 
            ContentType: text/plain
            MessageBody: Not found this WSI page
            StatusCode: 404
          # ForwardConfig: 
          #   ForwardConfig
          # Order: Integer
          # RedirectConfig: 
          #   RedirectConfig
          # TargetGroupArn: String
          Type: fixed-response
      Conditions: 
        - Field: path-pattern
          # HostHeaderConfig: 
          #   HostHeaderConfig
          # HttpHeaderConfig: 
          #   HttpHeaderConfig
          # HttpRequestMethodConfig: 
          #   HttpRequestMethodConfig
          # PathPatternConfig: 
          #   PathPatternConfig
          # QueryStringConfig: 
          #   QueryStringConfig
          # SourceIpConfig: 
          #   SourceIpConfig
          Values: 
            - /swagger-ui.html
      ListenerArn: !Ref Listener
      Priority: 1
  RedirectToTestVersionListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions: 
        - TargetGroupArn: !Ref TestTargetGroup
          Type: forward
          # FixedResponseConfig: 
          #   FixedResponseConfig
          # orwardConfig: 
          #   ForwardConfig
          # Order: Integer
          # RedirectConfig: 
          #   RedirectConfig
      Conditions: 
        - Field: query-string
          # HostHeaderConfig: 
          #   HostHeaderConfig
          # HttpHeaderConfig: 
          #   HttpHeaderConfig
          # HttpRequestMethodConfig: 
          #   HttpRequestMethodConfig
          # PathPatternConfig: 
          #   PathPatternConfig
          QueryStringConfig: 
            Values: 
              - Key: test
                Value: true
          # SourceIpConfig: 
          #   SourceIpConfig
          # Values: 
          #   - String
      ListenerArn: !Ref Listener
      Priority: 2
  StableTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: True
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /health
      HealthCheckPort: 80
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      IpAddressType: ipv4
      # Matcher: 
      #   Matcher
      Name: stable-tg
      Port: 80
      Protocol: HTTP
      # ProtocolVersion: String
      # Tags: 
      #   - Tag
      # TargetGroupAttributes: 
      #   - TargetGroupAttribute
      # Targets: 
      #   - TargetDescription
      TargetType: instance
      UnhealthyThresholdCount: 2
      VpcId: !Ref Vpc
  TestTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: True
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /health
      HealthCheckPort: 80
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      IpAddressType: ipv4
      # Matcher: 
      #   Matcher
      Name: test-tg
      Port: 80
      Protocol: HTTP
      # ProtocolVersion: String
      # Tags: 
      #   - Tag
      # TargetGroupAttributes: 
      #   - TargetGroupAttribute
      # Targets: 
      #   - TargetDescription
      TargetType: instance
      UnhealthyThresholdCount: 2
      VpcId: !Ref Vpc
  CloudWatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: False
      # AlarmActions: 
      #   - String
      # AlarmDescription: String
      AlarmName: ALB-4XX-high
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions: 
        - Name: LoadBalancer
          Value: !Select [ 1, !Split [ ":loadbalancer/", !GetAtt ApplicationLoadBalancer.LoadBalancerArn] ]
      # EvaluateLowSampleCountPercentile: String
      EvaluationPeriods: 1
      # ExtendedStatistic: String
      # InsufficientDataActions: 
      #   - String
      MetricName: HTTPCode_Target_4XX_Count
      # Metrics: 
      #   - MetricDataQuery
      Namespace: AWS/ApplicationELB
      # OKActions: 
      #   - String
      Period: 60
      Statistic: Minimum
      Threshold: 55
      # ThresholdMetricId: String
      # TreatMissingData: String
      Unit: Count
  Route53HostedZone:
    Type: AWS::Route53::HostedZone
    Properties:
      # HostedZoneConfig: 
      #   HostedZoneConfig
      # HostedZoneTags: 
      #   - HostedZoneTag
      Name: ws.local
      # QueryLoggingConfig: 
      #   CloudWatchLogsLogGroupArn: String
      VPCs: 
        - VPCId: !Ref Vpc
          VPCRegion: !Ref AWS::Region
  Route53RecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      # AliasTarget: 
      #   AliasTarget
      # CidrRoutingConfig: 
      #   CidrRoutingConfig
      # Comment: String
      # Failover: String
      # GeoLocation: 
      #   GeoLocation
      # HealthCheckId: String
      HostedZoneId: !Ref Route53HostedZone
      # HostedZoneName: String
      # MultiValueAnswer: Boolean
      Name: web.ws.local
      Region: !Ref AWS::Region
      ResourceRecords: 
        - !GetAtt ApplicationLoadBalancer.DNSName
      SetIdentifier: id_001
      TTL: 300
      Type: CNAME
      # Weight: Integer